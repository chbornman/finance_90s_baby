// Mocks generated by Mockito 5.4.4 from annotations
// in finance_90s_baby/test/api_mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:appwrite/appwrite.dart' as _i2;
import 'package:finance_90s_baby/api/database_api.dart' as _i6;
import 'package:finance_90s_baby/api/storage_api.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeStorage_0 extends _i1.SmartFake implements _i2.Storage {
  _FakeStorage_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDatabases_1 extends _i1.SmartFake implements _i2.Databases {
  _FakeDatabases_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [StorageAPI].
///
/// See the documentation for Mockito's code generation for more information.
class MockStorageAPI extends _i1.Mock implements _i3.StorageAPI {
  MockStorageAPI() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Storage get storage => (super.noSuchMethod(
        Invocation.getter(#storage),
        returnValue: _FakeStorage_0(
          this,
          Invocation.getter(#storage),
        ),
      ) as _i2.Storage);

  @override
  _i4.Future<String> getLessonContent(String? fileId) => (super.noSuchMethod(
        Invocation.method(
          #getLessonContent,
          [fileId],
        ),
        returnValue: _i4.Future<String>.value(_i5.dummyValue<String>(
          this,
          Invocation.method(
            #getLessonContent,
            [fileId],
          ),
        )),
      ) as _i4.Future<String>);
}

/// A class which mocks [DatabaseAPI].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabaseAPI extends _i1.Mock implements _i6.DatabaseAPI {
  MockDatabaseAPI() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Databases get databases => (super.noSuchMethod(
        Invocation.getter(#databases),
        returnValue: _FakeDatabases_1(
          this,
          Invocation.getter(#databases),
        ),
      ) as _i2.Databases);

  @override
  _i4.Future<List<dynamic>> getLessons() => (super.noSuchMethod(
        Invocation.method(
          #getLessons,
          [],
        ),
        returnValue: _i4.Future<List<dynamic>>.value(<dynamic>[]),
      ) as _i4.Future<List<dynamic>>);

  @override
  _i4.Future<void> addComment(
    String? lessonId,
    String? comment,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addComment,
          [
            lessonId,
            comment,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}
